---
- name: Initial preparation
  hosts: localhost
  gather_facts: false
  connection: local

  tasks: 
    - name: Clean configs dir (if exists)
      file: 
        path: '{{ path }}/configs-vni-{{ vni }}/'
        state: absent

    - name: Create configs directory
      file: 
        path: '{{ path }}/configs-vni-{{ vni }}'
        state: directory

    - name: Clean job inventory (if exists)
      file: 
        path: '{{ path }}/{{ inventory_folder }}/{{ job }}_inventory-vni-{{ vni }}.yml'
        state: absent

    - name: Create clean job inventory
      copy:
        content: "[{{ job }}]\n"
        dest: '{{ path }}/{{ inventory_folder }}/{{ job }}_inventory-vni-{{ vni }}.yml'
        force: no
        group: '{{ group }}'
        owner: '{{ owner }}'
        mode: 0777

- name: Generate Ingress Replication configs
  hosts: "{{ pod }}"
  gather_facts: false
  connection: network_cli

  vars:
    host_vni_list: []

  tasks:
    - name: Ping hosts to check their availability
      no_log: True
      command: ping -c 2 -W 1 {{ ansible_host }}
      delegate_to: localhost

    - name: Collect show nve vni
      nxos_command:
        commands:
          - "show nve vni {{ item }} | json"
      with_items: "{{ vni }}"
      register: result

    - name: Set host_vni_list
      set_fact:
        host_vni_list: "{{ host_vni_list }} + [ {{ item.stdout[0].TABLE_nve_vni.ROW_nve_vni }} ]"
      with_items: "{{ result.results }}"
      when: item.stdout[0] != '' and 
            item.stdout[0].TABLE_nve_vni.ROW_nve_vni.mcast != 'UnicastBGP' and 
            item.stdout[0].TABLE_nve_vni.ROW_nve_vni.mcast != 'n/a'
      loop_control:
        label: "{{ item.invocation.module_args.commands }}"

    - name: Print vnis
      debug:
        msg: "{{ item }}"
      with_items: "{{ host_vni_list }}"
      when: host_vni_list | length != 0

    - name: Generate configuration files
      template:
        src: '{{ path }}/{{ templates_folder }}/{{ template_name }}'
        dest: '{{ path }}/configs-vni-{{ vni }}/{{ inventory_hostname }}.cfg'
      when: host_vni_list | length != 0
 
    - name: Insert inventory line
      shell: echo '{{ inventory_hostname }}' ansible_host='{{ hostvars[inventory_hostname].ansible_host|quote }}' >> '{{ path }}/{{ inventory_folder }}/{{ job }}_inventory-vni-{{ vni }}.yml'
      when: host_vni_list | length != 0 

